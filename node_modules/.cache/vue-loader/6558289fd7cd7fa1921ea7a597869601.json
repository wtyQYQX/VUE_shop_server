{"remainingRequest":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\a1013\\Desktop\\vue_shop\\src\\components\\goods\\Cate.vue?vue&type=style&index=0&id=90a0ced0&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\src\\components\\goods\\Cate.vue","mtime":1645695942599},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\css-loader\\dist\\cjs.js","mtime":1644915265271},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1644915266182},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\postcss-loader\\src\\index.js","mtime":1644915265682},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\less-loader\\dist\\cjs.js","mtime":1645186919746},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644915264891},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1644915265855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudHJlZXRhYmxlIHsNCiAgbWFyZ2luLXRvcDogMTVweDsNCn0NCi5lbC1idXR0b24gew0KICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KfQ0KLmVsLWNhc2NhZGVyIHsNCiAgd2lkdGg6IDEwMCU7DQp9DQo="},{"version":3,"sources":["Cate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Cate.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-row>\r\n        <el-button type=\"primary\" @click=\"showAddCateDialog\"\r\n          >添加分类</el-button\r\n        >\r\n      </el-row>\r\n\r\n      <!-- 表格  引入tree-table一定要有columns -->\r\n      <tree-table\r\n        class=\"treeTable\"\r\n        :columns=\"columns\"\r\n        :data=\"cateList\"\r\n        :selection-type=\"false\"\r\n        :expand-type=\"false\"\r\n        show-index\r\n        index-text=\"#\"\r\n        boder\r\n        :show-row-hover=\"false\"\r\n      >\r\n        <!-- 是否有效 -->\r\n        <template slot=\"isok\" slot-scope=\"scope\">\r\n          <i\r\n            class=\"el-icon-success\"\r\n            v-if=\"scope.row.cat_deleted === false\"\r\n            style=\"color: lightgreen\"\r\n          ></i>\r\n          <i class=\"el-icon-error\" v-else style=\"color: red\"></i>\r\n        </template>\r\n        <!-- 排序 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level === 0\">一级</el-tag>\r\n          <el-tag\r\n            size=\"mini\"\r\n            type=\"success\"\r\n            v-else-if=\"scope.row.cat_level === 1\"\r\n            >二级</el-tag\r\n          >\r\n          <el-tag size=\"mini\" type=\"warning\" v-else>三级</el-tag>\r\n        </template>\r\n        <!-- 操作 -->\r\n        <template slot=\"opt\" slot-scope=\"scope\">\r\n          <el-button type=\"primary\" @click=\"showeditCateDialog(scope.row)\" icon=\"el-icon-edit\" size=\"mini\">编辑</el-button>\r\n            <el-button type=\"danger\" @click=\"removeCate(scope.row.cat_id)\" icon=\"el-icon-delete\" size=\"mini\">删除</el-button>\r\n        </template>\r\n      </tree-table>\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[3, 5, 10, 15]\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加分类对话框 -->\r\n    <el-dialog\r\n      title=\"添加分类\"\r\n      :visible.sync=\"addCateDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addCateDialogClosed\"\r\n    >\r\n      <!-- 添加分类的表单 -->\r\n      <el-form\r\n        ref=\"addCateFormRef\"\r\n        :model=\"addCateForm\"\r\n        :rules=\"addCateFormRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类：\">\r\n          <!-- options用来指定数据源 -->\r\n          <!-- props用来指定配置对象 -->\r\n          <el-cascader\r\n            v-model=\"selectdKeys\"\r\n            :options=\"parentCateList\"\r\n            :props=\"{\r\n              expandTrigger: 'hover',\r\n              ...cascaderProps,\r\n              checkStrictly: 'true',\r\n            }\"\r\n            @change=\"parentCateChanged\"\r\n            clearable\r\n          ></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\"\r\n          >确 定</el-button\r\n        >\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 编辑分类信息 -->\r\n    <el-dialog title=\"修改分类\" :visible.sync=\"editCateDialogVisbel\" width=\"50%\">\r\n      <el-form :model=\"editCate\" :rules=\"editCateRules\" ref=\"editCateRef\" label-width=\"100px\">\r\n        <el-form-item label=\"分类名称\" prop=\"cat_name\">\r\n          <el-input v-model=\"editCate.cat_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editCateDialogVisbel = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editCateInfo\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  components: {},\r\n  props: {},\r\n  data() {\r\n    return {\r\n      // 商品分类的数据列表,默认为空\r\n      cateList: [],\r\n      // 请求参数\r\n      queryInfo: {\r\n        type: 3,\r\n        pagenum: 1,\r\n        pagesize: 5,\r\n      },\r\n      // 总数据条数\r\n      total: 0,\r\n      // 为table指定列的定义\r\n      columns: [\r\n        {\r\n          label: \"分类名称\",\r\n          prop: \"cat_name\",\r\n        },\r\n        {\r\n          label: \"是否有效\",\r\n          // 表示,将当前列定义为模板列\r\n          type: \"template\",\r\n          // 表示当前这一列使用模板名称\r\n          template: \"isok\",\r\n        },\r\n        {\r\n          label: \"排序\",\r\n          // 表示,将当前列定义为模板列\r\n          type: \"template\",\r\n          // 表示当前这一列使用模板名称\r\n          template: \"order\",\r\n        },\r\n        {\r\n          label: \"操作\",\r\n          // 表示,将当前列定义为模板列\r\n          type: \"template\",\r\n          // 表示当前这一列使用模板名称\r\n          template: \"opt\",\r\n        },\r\n      ],\r\n      // 添加对话框的分类和隐藏\r\n      addCateDialogVisible: false,\r\n      // 添加分类的表单数据对象\r\n      addCateForm: {\r\n        // 将要添加分类的名称\r\n        cat_name: \"\",\r\n        // 父级分类的ID\r\n        cat_pid: 0,\r\n        // 分类层级,默认要添加的是1级分类\r\n        cat_level: 0,\r\n      },\r\n      // 添加分类表单的验证规则对象\r\n      addCateFormRules: {\r\n        cat_name: [\r\n          { required: true, message: \"请输入分类名称\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 父级分类的列表\r\n      parentCateList: [],\r\n      // 指定级联选择器的配置对象\r\n      cascaderProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n      },\r\n      // 选中的父级分类的id数组\r\n      selectdKeys: [],\r\n      // 编辑对话框的显示和隐藏\r\n      editCateDialogVisbel: false,\r\n      editCate: {},\r\n      editCateRules: {\r\n        cat_name: [\r\n          { required: true, message: \"请输入要修改的信息\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      editCateId: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  methods: {\r\n    // 获取商品分类数据\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\", {\r\n        params: this.queryInfo,\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取商品分类失败!\");\r\n      }\r\n      // 把数据列表赋值给cateList\r\n      this.cateList = res.data.result;\r\n      // 获取商品的总数量\r\n      this.total = res.data.total;\r\n      //   console.log(res)\r\n    },\r\n\r\n    //监听pagesize改变的事件\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize;\r\n      this.getCateList();\r\n    },\r\n\r\n    //监听pagenum的改变\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum = newPage;\r\n      this.getCateList();\r\n    },\r\n\r\n    //点击按钮展示添加分类对话框\r\n    async showAddCateDialog() {\r\n      this.getParentCateList();\r\n      this.addCateDialogVisible = true;\r\n    },\r\n\r\n    // 获取父级分类的数据列表\r\n    async getParentCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\", {\r\n        params: { type: 2 },\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取父级分类数据失败!\");\r\n      }\r\n      // console.log(res.data)\r\n      this.parentCateList = res.data;\r\n    },\r\n\r\n    // 选中向发生变化触发\r\n    parentCateChanged() {\r\n      console.log(this.selectdKeys)\r\n      // 如果 selectdKeys 数组中的length大于0证明选中父级分类\r\n      // 反之,就说明没有选中任何父级分类\r\n      if (this.selectdKeys.length > 0) {\r\n        // 父级分类的id\r\n        this.addCateForm.cat_pid = this.selectdKeys[this.selectdKeys.length - 1]\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = this.selectdKeys.length\r\n        return\r\n      } else {\r\n        // 父级分类的id\r\n        this.addCateForm.cat_pid = 0\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = 0\r\n      }\r\n    },\r\n\r\n    // 点击按钮添加新的分类\r\n    addCate() {\r\n      // console.log(this.addCateForm)\r\n      this.$refs.addCateFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        const { data: res } = await this.$http.post('categories', this.addCateForm)\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('添加分类失败!')\r\n        }\r\n        this.$message.success('添加分类成功!')\r\n        this.getCateList()\r\n        this.addCateDialogVisible = false\r\n      })\r\n    },\r\n    // 关闭对话框事件,重置表单数据\r\n    addCateDialogClosed() {\r\n      this.$refs.addCateFormRef.resetFields()\r\n      this.selectdKeys = []\r\n      this.addCateForm.cat_level = 0\r\n      this.addCateForm.cat_pid = 0\r\n    },\r\n    async showeditCateDialog(cateInfo) {\r\n      this.editCateId = cateInfo.cat_id\r\n      const { data: res } = await this.$http.get('categories/' + cateInfo.cat_id)\r\n      this.editCate = res.data\r\n      // console.log(this.editCate)\r\n      // console.log(res.data)\r\n      this.editCateDialogVisbel = true\r\n    },\r\n    // 编辑分类信息\r\n    async editCateInfo() {\r\n      const { data: res } = await this.$http.put('categories/' + this.editCate.cat_id, { cat_name: this.editCate.cat_name })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('更新分类数据失败!')\r\n      }\r\n      this.$message.success('更新分类数据成功!')\r\n      this.getCateList()\r\n      this.editCateDialogVisbel = false\r\n      // console.log(res)\r\n    },\r\n    // 删除分类\r\n    async removeCate(id) {\r\n      const confirRustle = await this.$confirm('此操作将永久删除该文件, 是否继续?', '删除分类', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n\r\n      if (confirRustle !== 'confirm') {\r\n        return this.$message.info('已取消删除操作!')\r\n      }\r\n\r\n      const { data: res } = await this.$http.delete('categories/' + id)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('分类删除失败!')\r\n      }\r\n      this.$message.success('该分类已经成功删除!')\r\n      this.getCateList()\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.treetable {\r\n  margin-top: 15px;\r\n}\r\n.el-button {\r\n  margin-bottom: 10px;\r\n}\r\n.el-cascader {\r\n  width: 100%;\r\n}\r\n</style>"]}]}