{"remainingRequest":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\a1013\\Desktop\\vue_shop\\src\\components\\goods\\Add.vue?vue&type=style&index=0&id=0982413d&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\src\\components\\goods\\Add.vue","mtime":1645712149399},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\css-loader\\dist\\cjs.js","mtime":1644915265271},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1644915266182},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\postcss-loader\\src\\index.js","mtime":1644915265682},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\less-loader\\dist\\cjs.js","mtime":1645186919746},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644915264891},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1644915265855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmVsLXN0ZXBzIHsNCiAgbWFyZ2luOiAxNXB4IDA7DQp9DQouZWwtc3RlcF9fdGl0bGUgew0KICBmb250LXNpemU6IDEzcHg7DQp9DQouZWwtY2hlY2tib3ggew0KICBtYXJnaW46IDAgNXB4IDAgMCAhaW1wb3J0YW50Ow0KfQ0KLnBlcnZpZXdJbWcgew0KICB3aWR0aDogMTAwJTsNCn0NCi5BZGRCdG4gew0KICBtYXJnaW4tdG9wOiAxNXB4Ow0KfQ0K"},{"version":3,"sources":["Add.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Add.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\r\n  <div class=\"add\">\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>添加商品</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!--    卡片视图-->\r\n    <el-card>\r\n      <!--      提示区-->\r\n      <el-alert title=\"添加商品信息\" type=\"info\" center :closable=\"false\" show-icon> </el-alert>\r\n      <!--      步骤条区-->\r\n      <el-steps align-center :active=\"activeIndex - 0\" finish-status=\"success\">\r\n        <el-step title=\"基本信息\"></el-step>\r\n        <el-step title=\"商品参数\"></el-step>\r\n        <el-step title=\"商品属性\"></el-step>\r\n        <el-step title=\"商品图片\"></el-step>\r\n        <el-step title=\"商品内容\"></el-step>\r\n        <el-step title=\"完成\"></el-step>\r\n      </el-steps>\r\n      <!--      table --- > tab栏区域-->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-position=\"top\" label-width=\"100px\">\r\n        <el-tabs :tab-position=\"'left'\" v-model=\"activeIndex\" :before-leave=\"beforeTabLevae\" @tab-click=\"tabClicked\">\r\n          <el-tab-pane label=\"基本信息\" name=\"0\">\r\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\r\n              <el-input v-model=\"addForm.goods_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\r\n              <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\r\n              <el-input v-model=\"addForm.goods_weight\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\r\n              <el-input v-model=\"addForm.goods_number\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <!-- 级联选择器 -->\r\n            <el-form-item label=\"商品分类\" prop=\"goods_cat\">\r\n              <el-cascader v-model=\"addForm.goods_cat\" :options=\"cateList\" :props=\"{ expandTrigger: 'hover', ...cateProps }\" @change=\"handleChange\"></el-cascader>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品参数\" name=\"1\">\r\n            <!-- 渲染表单的item项 -->\r\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in manyTableData\" :key=\"item.attr_id\">\r\n              <el-checkbox-group v-model=\"item.attr_vals\">\r\n                <el-checkbox border :label=\"item\" v-for=\"(item, i) in item.attr_vals\" :key=\"i\">{{ item }}</el-checkbox>\r\n              </el-checkbox-group>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品属性\" name=\"2\">\r\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in onlyTableData\" :key=\"item.attr_id\">\r\n              <el-input v-model=\"item.attr_vals\"></el-input>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品图片\" name=\"3\">\r\n            <!--\r\n             action 表示图片要上传到的后台API地址\r\n             handlePreview 点击预览触发\r\n             handleRemove 删除图片触发\r\n             fileList 指定文件列表\r\n             list-type 指定预览组件的呈现方式\r\n            -->\r\n            <el-upload class=\"upload-demo\" :action=\"uploadURL\" :on-preview=\"handlePreview\" :on-remove=\"handleRemove\" list-type=\"picture\" :headers=\"headersObj\" :on-success=\"handleSuccess\">\r\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n            </el-upload>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品内容\" name=\"4\">\r\n            <!-- 富文本编辑器组件 Two-way Data-Binding -->\r\n            <quill-editor ref=\"myQuillEditor\" v-model=\"addForm.goods_introduce\" />\r\n            <!--            添加按钮-->\r\n            <el-button type=\"primary\" class=\"AddBtn\" @click=\"addShop\">添加商品</el-button>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-form>\r\n    </el-card>\r\n    <!--    图片预览-->\r\n    <el-dialog title=\"图片预览\" :visible.sync=\"previewDialogVisible\" width=\"50%\">\r\n      <img :src=\"previewPath\" alt=\"\" class=\"perviewImg\" />\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash'\r\nexport default {    \r\n  name: 'Add',\r\n  data() {\r\n    //验证用户名规则\r\n    var checkusername = (rule, value, cb) => {\r\n      const usernameReg = /^[a-zA-Z0-9]{3,10}$/;\r\n      if (usernameReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的用户名(可以包含字母，数字),在3~10个字符之间\"));\r\n    };\r\n    //验证密码规则\r\n    var checkpassword = (rule, value, cb) => {\r\n      const passwordReg = /^[a-zA-Z0-9]{6,15}$/;\r\n      if (passwordReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的密码(可以包含字母，数字),在6~15个字符之间\"));\r\n    };\r\n    //验证邮箱规则\r\n    var checkEmail = (rule, value, cb) => {\r\n      const emailReg = /^\\w+@[a-zA-Z0-9]+((\\.[a-z0-9A-Z]{1,})+)$/;\r\n      if (emailReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的邮箱\"));\r\n    };\r\n\r\n    //验证手机号规则\r\n    var checkmobile = (rule, value, cb) => {\r\n      const phoneReg =\r\n        /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n      if (phoneReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的手机号\"));\r\n    };\r\n    return {\r\n      activeIndex: '0',\r\n      // 添加商品的表单数据对象\r\n      addForm: {\r\n        goods_name: '',\r\n        goods_price: 0,\r\n        goods_weight: 0,\r\n        goods_number: 0,\r\n        // 商品所属的分类数组\r\n        goods_cat: [],\r\n        // 图片的数组\r\n        pics: [],\r\n        // 商品的详情描述\r\n        goods_introduce: '',\r\n        attrs: []\r\n      },\r\n      // 存放商品列表数据\r\n      cateList: [],\r\n      cateProps: {\r\n        label: 'cat_name',\r\n        value: 'cat_id',\r\n        children: 'children'\r\n      },\r\n      // 动态参数列表数据\r\n      manyTableData: [],\r\n      // 静态参数列表数据\r\n      onlyTableData: [],\r\n      // 上传图片的URL地址\r\n      uploadURL: 'http://127.0.0.1:8888/api/private/v1/upload',\r\n      // 图片上传组件的headers请求头对象\r\n      headersObj: {\r\n        Authorization: window.sessionStorage.getItem('token')\r\n      },\r\n      // 预览图片的路径\r\n      previewPath: '',\r\n      // 图片预览的对话框\r\n      previewDialogVisible: false,\r\n      //添加表单的验证规则对象\r\n      addFormRules: {\r\n        username: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n          { validator: checkusername, trigger: \"blur\" },\r\n        ],\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          { validator: checkpassword, trigger: \"blur\" },\r\n        ],\r\n        email: [\r\n          { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\r\n          { validator: checkEmail, trigger: \"blur\" },\r\n        ],\r\n        mobile: [\r\n          { required: true, message: \"请输入手机号\", trigger: \"blur\" },\r\n          { validator: checkmobile, trigger: \"blur\" },\r\n        ],\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('categories')\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取商品列表失败!')\r\n      }\r\n      this.cateList = res.data\r\n    //   console.log(this.cateList)\r\n    },\r\n    // 级联选择项变化触发\r\n    handleChange() {\r\n      if (this.addForm.goods_cat.length !== 3) {\r\n        this.addForm.goods_cat = []\r\n      }\r\n    //   console.log(this.addForm.goods_cat)\r\n    },\r\n    // 离开当前 Tabs 页\r\n    beforeTabLevae(activeName, oldActiveName) {\r\n      // console.log('即将离开标签页的名字: ', oldActiveName)\r\n      // console.log('即将进入标签页的名字: ', activeName)\r\n      if ((oldActiveName === '0' && this.addForm.goods_cat.length !== 3) || this.addForm.goods_name === '') {\r\n        this.$message.error('请先选择商品分类! 或 填写商品名称')\r\n        return false\r\n      }\r\n    },\r\n    async tabClicked() {\r\n      // 证明访问的是动态列表\r\n      if (this.activeIndex === '1') {\r\n        console.log('动态参数')\r\n        const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes`, {\r\n          params: { sel: 'many' }\r\n        })\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取动态列表失败!')\r\n        }\r\n        res.data.forEach(item => (item.attr_vals = item.attr_vals.length === 0 ? [] : item.attr_vals.split(' ')))\r\n        // console.log(res)\r\n        this.manyTableData = res.data\r\n      }\r\n      if (this.activeIndex === '2') {\r\n        const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes`, {\r\n          params: { sel: 'only' }\r\n        })\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取静态列表失败!')\r\n        }\r\n        this.onlyTableData = res.data\r\n        console.log(this.onlyTableData)\r\n      }\r\n    },\r\n    // 点击图片预览时触发\r\n    handlePreview(file) {\r\n      this.previewPath = file.response.data.url\r\n      this.previewDialogVisible = true\r\n      console.log('预览图片', file)\r\n    },\r\n    // 处理移除图片的操作\r\n    handleRemove(file) {\r\n      // 1. 获取将要删除的图片的临时路径\r\n      const filePath = file.response.data.tmp_path\r\n      // 2. 从 pics 数组中找到这个图片的对应的索引值\r\n      const index = this.addForm.pics.findIndex(x => x.pic === filePath)\r\n      // 3. 调用数组的splice方法,把图片信息对象,从pics数组中移除\r\n      this.addForm.pics.splice(index, 1)\r\n      console.log('移除图片', file, this.addForm)\r\n    },\r\n    // 监听图片上传成功的事件\r\n    handleSuccess(resposne) {\r\n      // 1. 拼接得到一个图片信息对象\r\n      const picInfo = { pic: resposne.data.tmp_path }\r\n      // 2. 将图片信息对象,push到pics数组中\r\n      this.addForm.pics.push(picInfo)\r\n      console.log(resposne)\r\n      console.log(this.addForm)\r\n    },\r\n    addShop() {\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) {\r\n          return this.$message.error('请填写必要的表单项')\r\n        }\r\n        // 执行添加的业务逻辑\r\n        const form = _.cloneDeep(this.addForm)\r\n        form.goods_cat = form.goods_cat.join(',')\r\n        // 处理动态参数\r\n        this.manyTableData.forEach(item => {\r\n          const newInfo = { attr_id: item.attr_id, attr_vals: item.attr_vals }\r\n          this.addForm.attrs.push(newInfo)\r\n        })\r\n        // 处理静态参数\r\n        this.onlyTableData.forEach(item => {\r\n          const newInfo = { attr_id: item.attr_id, attr_vals: item.attr_vals }\r\n          this.addForm.attrs.push(newInfo)\r\n        })\r\n        form.attrs = this.addForm.attrs\r\n        // console.log(form)\r\n        // 发起请求添加商品数据\r\n        // 商品的名称必须是唯一的\r\n        const { data: res } = await this.$http.post('goods', form)\r\n        console.log(res)\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('添加商品失败!')\r\n        }\r\n        this.$message.success('添加商品成功!')\r\n        this.$router.push('/goods')\r\n        // 不能直接做转换因为在 级联选择器 中双向绑定了 goods_cat 作为key\r\n        // this.addForm.goods_cat = this.addForm.goods_cat.join(',')\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    cateId() {\r\n      if (this.addForm.goods_cat.length === 3) {\r\n        return this.addForm.goods_cat[2]\r\n      }\r\n      return null\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-steps {\r\n  margin: 15px 0;\r\n}\r\n.el-step__title {\r\n  font-size: 13px;\r\n}\r\n.el-checkbox {\r\n  margin: 0 5px 0 0 !important;\r\n}\r\n.perviewImg {\r\n  width: 100%;\r\n}\r\n.AddBtn {\r\n  margin-top: 15px;\r\n}\r\n</style>\r\n"]}]}