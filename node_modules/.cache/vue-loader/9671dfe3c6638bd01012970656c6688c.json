{"remainingRequest":"C:\\Users\\a1013\\Desktop\\电商项目\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\a1013\\Desktop\\电商项目\\vue_shop\\src\\components\\user\\Users.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\a1013\\Desktop\\电商项目\\vue_shop\\src\\components\\user\\Users.vue","mtime":1645186161086},{"path":"C:\\Users\\a1013\\Desktop\\电商项目\\vue_shop\\node_modules\\css-loader\\dist\\cjs.js","mtime":1644915265271},{"path":"C:\\Users\\a1013\\Desktop\\电商项目\\vue_shop\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1644915266182},{"path":"C:\\Users\\a1013\\Desktop\\电商项目\\vue_shop\\node_modules\\postcss-loader\\src\\index.js","mtime":1644915265682},{"path":"C:\\Users\\a1013\\Desktop\\电商项目\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644915264891},{"path":"C:\\Users\\a1013\\Desktop\\电商项目\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1644915265855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnRleHQgew0KICBmb250LXNpemU6IDE0cHg7DQp9DQoNCi5pdGVtIHsNCiAgcGFkZGluZzogMThweCAwOw0KfQ0KDQouYm94LWNhcmQgew0KICB3aWR0aDogNDgwcHg7DQp9DQo="},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+LA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\r\n  <div class=\"\">\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-row :gutter=\"15\">\r\n        <!-- 搜索与添加区域 -->\r\n        <el-col :span=\"8\">\r\n          <el-input\r\n            placeholder=\"请输入内容\"\r\n            v-model=\"queryInfo.query\"\r\n            clearable\r\n            @clear=\"getUserList\"\r\n          >\r\n            <el-button\r\n              slot=\"append\"\r\n              icon=\"el-icon-search\"\r\n              @click=\"getUserList\"\r\n            ></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <!-- 添加用户按钮 -->\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\"\r\n            >添加用户</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 用户列表区域 -->\r\n      <el-table :data=\"userlist\" border stripe>\r\n        <el-table-column type=\"index\" label=\"序号\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"姓名\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n        <el-table-column prop=\"mobile\" label=\"电话\"></el-table-column>\r\n        <el-table-column prop=\"role_name\" label=\"角色\"></el-table-column>\r\n        <el-table-column label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch\r\n              v-model=\"scope.row.mg_state\"\r\n              @change=\"userStateChange(scope.row)\"\r\n            ></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 修改按钮 -->\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"primary\"\r\n              icon=\"el-icon-edit\"\r\n              @click=\"showEditDialog(scope.row.id)\"\r\n            ></el-button>\r\n            <!-- 删除按钮 -->\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"danger\"\r\n              icon=\"el-icon-delete\"\r\n              @click=\"deleteUser(scope.row.id)\"\r\n            ></el-button>\r\n            <!-- 分配角色按钮 -->\r\n            <el-tooltip\r\n              class=\"item\"\r\n              effect=\"dark\"\r\n              content=\"分配角色\"\r\n              placement=\"top\"\r\n              :enterable=\"false\"\r\n            >\r\n              <el-button\r\n                size=\"mini\"\r\n                type=\"warning\"\r\n                icon=\"el-icon-setting\"\r\n                @click=\"setRole(scope.row)\"\r\n              ></el-button>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[1, 2, 5, 10]\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加用户的对话框 -->\r\n    <el-dialog\r\n      title=\"添加用户\"\r\n      :visible.sync=\"addDialogVisible\"\r\n      width=\"30%\"\r\n      @close=\"addDialogClose\"\r\n    >\r\n      <!-- 内容主体区域 -->\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"addFormRules\"\r\n        ref=\"addFormRef\"\r\n        label-width=\"70px\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"addForm.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"addForm.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"addForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"mobile\">\r\n          <el-input v-model=\"addForm.mobile\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 底部区域 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addUser\">确 定 </el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改用户的对话框 -->\r\n    <el-dialog\r\n      title=\"修改用户\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"editDialogClose\"\r\n    >\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"addFormRules\"\r\n        ref=\"editFormRef\"\r\n        label-width=\"70px\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"editForm.username\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"editForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"mobile\">\r\n          <el-input v-model=\"editForm.mobile\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 分配角色的对话框 -->\r\n    <el-dialog\r\n      title=\"分配角色\"\r\n      :visible.sync=\"setRoleDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"setRoleDialogClosed\"\r\n    >\r\n      <div>\r\n        <p>当前的用户：{{ userInfo.username }}</p>\r\n        <p>当前的角色：{{ userInfo.role_name }}</p>\r\n        <p>\r\n          分配新角色：<el-select v-model=\"selectedRoleId\" placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in roleList\"\r\n              :key=\"item.id\"\r\n              :label=\"item.roleName\"\r\n              :value=\"item.id\"\r\n            >\r\n            </el-option>\r\n          </el-select>\r\n        </p>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"setRoleDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveRoleInfo\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n    <style>\r\n.text {\r\n  font-size: 14px;\r\n}\r\n\r\n.item {\r\n  padding: 18px 0;\r\n}\r\n\r\n.box-card {\r\n  width: 480px;\r\n}\r\n</style>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    //验证用户名规则\r\n    var checkusername = (rule, value, cb) => {\r\n      const usernameReg = /^[a-zA-Z0-9]{3,10}$/;\r\n      if (usernameReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的用户名(可以包含字母，数字),在3~10个字符之间\"));\r\n    };\r\n    //验证密码规则\r\n    var checkpassword = (rule, value, cb) => {\r\n      const passwordReg = /^[a-zA-Z0-9]{6,15}$/;\r\n      if (passwordReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的密码(可以包含字母，数字),在6~15个字符之间\"));\r\n    };\r\n    //验证邮箱规则\r\n    var checkEmail = (rule, value, cb) => {\r\n      const emailReg = /^\\w+@[a-zA-Z0-9]+((\\.[a-z0-9A-Z]{1,})+)$/;\r\n      if (emailReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的邮箱\"));\r\n    };\r\n\r\n    //验证手机号规则\r\n    var checkmobile = (rule, value, cb) => {\r\n      const phoneReg =\r\n        /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n      if (phoneReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的手机号\"));\r\n    };\r\n\r\n    return {\r\n      // 获取用户列表的参数对象\r\n      queryInfo: {\r\n        // 搜索值\r\n        query: \"\",\r\n        // 当前的页数\r\n        pagenum: 1,\r\n        // 当前每次显示多少条数据\r\n        pagesize: 5,\r\n      },\r\n      userlist: [],\r\n      total: 0,\r\n      //控制用户对话框的显示与隐藏\r\n      dialogVisible: false,\r\n\r\n      //添加用户的表单数据\r\n      addForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        mobile: \"\",\r\n      },\r\n      //添加表单的验证规则对象\r\n      addFormRules: {\r\n        username: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n          { validator: checkusername, trigger: \"blur\" },\r\n        ],\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          { validator: checkpassword, trigger: \"blur\" },\r\n        ],\r\n        email: [\r\n          { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\r\n          { validator: checkEmail, trigger: \"blur\" },\r\n        ],\r\n        mobile: [\r\n          { required: true, message: \"请输入手机号\", trigger: \"blur\" },\r\n          { validator: checkmobile, trigger: \"blur\" },\r\n        ],\r\n      },\r\n      //控制添加用户对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      //控制修改对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      //控制分配角色对话框的显示与隐藏\r\n      setRoleDialogVisible: false,\r\n      //查询到的用户信息对象\r\n      editForm: {},\r\n      //需要被分配的用户信息\r\n      userInfo: {},\r\n      //所有角色的数据列表\r\n      roleList: [],\r\n      //已选中角色id值\r\n      selectedRoleId: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async getUserList() {\r\n      const { data: res } = await this.$http.get(\"users\", {\r\n        params: this.queryInfo,\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        this.$message.error(\"获取用户列表失败!\");\r\n      }\r\n      // this.$message.success(\"获取用户列表成功!\");\r\n      this.userlist = res.data.users;\r\n      this.total = res.data.total;\r\n      // console.log(res)\r\n    },\r\n    //监听pages改变的事件\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize;\r\n      this.getUserList();\r\n    },\r\n    //监听页码值改变的事件\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum = newPage;\r\n      this.getUserList();\r\n    },\r\n    //监听状态开关的改变的事件\r\n    async userStateChange(userinfo) {\r\n      const { data: res } = await this.$http.put(\r\n        `users/${userinfo.id}/state/${userinfo.mg_state}`\r\n      );\r\n      if (res.meta.status !== 200) {\r\n        userinfo.mg_state = !userinfo.mg_state;\r\n        return this.$message.erro(\"更新用户状态失败！\");\r\n      }\r\n    },\r\n\r\n    //监听添加用户对话框关闭事件\r\n    addDialogClose() {\r\n      this.$refs.addFormRef.resetFields();\r\n    },\r\n\r\n    //点击确定，添加用户\r\n    addUser() {\r\n      this.$refs.addFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.post(\"users\", this.addForm);\r\n        if (res.meta.status !== 201) this.$message.error(\"添加用户失败！\");\r\n        this.$message.success(\"添加用户成功！\");\r\n        //隐藏用户对话框\r\n        this.addDialogVisible = false;\r\n        //重新获取表单数据\r\n        this.getUserList();\r\n      });\r\n    },\r\n\r\n    //展示修改用户的对话框\r\n    async showEditDialog(id) {\r\n      const { data: res } = await this.$http.get(\"users/\" + id);\r\n      if (res.meta.status !== 200)\r\n        return this.$message.error(\"查询用户信息失败!\");\r\n      this.editForm = res.data;\r\n      this.editDialogVisible = true;\r\n    },\r\n    //监听修改对话框关闭事件\r\n    editDialogClose() {\r\n      this.$refs.editFormRef.resetFields();\r\n    },\r\n    //修改用户并提交\r\n    editUserInfo() {\r\n      this.$refs.editFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http.put(\r\n          \"users/\" + this.editForm.id,\r\n          {\r\n            email: this.editForm.email,\r\n            mobile: this.editForm.mobile,\r\n          }\r\n        );\r\n        if (res.meta.status !== 200) this.$message.error(\"修改用户失败！\");\r\n        this.$message.success(\"修改用户成功！\");\r\n        //隐藏修改用户对话框\r\n        this.editDialogVisible = false;\r\n        //重新获取表单数据\r\n        this.getUserList();\r\n      });\r\n    },\r\n\r\n    //删除用户\r\n    async deleteUser(id) {\r\n      // 询问用户是否删除用户\r\n      const confirmRusult = await this.$confirm(\r\n        \"此操作将永久删除该文件, 是否继续?\",\r\n        \"永久删除该用户\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      console.log(confirmRusult);\r\n      // 用户点击了删除,则返回字符串 confirm\r\n      // 用户取消了删除,则返回字符串 cancel\r\n      if (confirmRusult !== \"confirm\") {\r\n        return this.$message.info(\"已经取消了删除\");\r\n      }\r\n      const { data: res } = await this.$http.delete(\"users/\" + id);\r\n      if (res.meta.status !== 200) this.$message.error(\"删除用户失败！\");\r\n      this.$message.success(\"删除用户成功！\");\r\n      this.getUserList();\r\n    },\r\n\r\n    //展示分配角色对话框\r\n    async setRole(userInfo) {\r\n      this.userInfo = userInfo;\r\n      //在展示所有对话框之前，获取所有的角色列表\r\n      const { data: res } = await this.$http.get(\"roles\");\r\n      if (res.meta.status !== 200)\r\n        return this.$message.error(\"获取角色列表失败！\");\r\n      this.roleList = res.data;\r\n      this.setRoleDialogVisible = true;\r\n    },\r\n\r\n    //点击按钮，分配角色\r\n    async saveRoleInfo() {\r\n      if (!this.selectedRoleId)\r\n        return this.$message.error(\"请选择分配的角色！\");\r\n      const { data: res } = await this.$http.put(\r\n        `users/${this.userInfo.id}/role`,\r\n        { rid: this.selectedRoleId }\r\n      );\r\n      if (res.meta.status !== 200) return this.$message.error(\"更新角色失败!\");\r\n      this.$message.success('更新角色成功！')\r\n      this.getUserList();\r\n      this.setRoleDialogVisible = false;\r\n    },\r\n\r\n    //监听分配角色对话框关闭的事件\r\n    setRoleDialogClosed(){\r\n      this.selectedRoleId=''\r\n      this.userInfo={}\r\n    },\r\n  },\r\n  created() {\r\n    this.getUserList();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>"]}]}