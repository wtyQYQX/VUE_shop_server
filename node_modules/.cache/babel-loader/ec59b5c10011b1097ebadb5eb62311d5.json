{"remainingRequest":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\a1013\\Desktop\\vue_shop\\src\\components\\report\\Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\src\\components\\report\\Report.vue","mtime":1645716284483},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\babel.config.js","mtime":1645717503330},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644915264891},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1644915265685},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644915264891},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1644915265855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2ExMDEzL0Rlc2t0b3AvdnVlX3Nob3Avbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIDEuIOW8leWFpSBlY2hhcnRzIOaMiemcgOW8leWFpQppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnOwppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1JlcG9ydCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIOmcgOimgeWQiOW5tueahOaVsOaNrgogICAgICBvcHRpb25zOiB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfnlKjmiLfmnaXmupAnCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNFOUVFRjMnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIGxlZnQ6ICczJScsCiAgICAgICAgICByaWdodDogJzQlJywKICAgICAgICAgIGJvdHRvbTogJzMlJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IFt7CiAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UKICAgICAgICB9XSwKICAgICAgICB5QXhpczogW3sKICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgLy8g5q2k5pe2LOmhtemdouS4iueahOWFg+e0oCzlt7Lnu4/ooqvmuLLmn5Plrozmr5XkuoYKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgbXlDaGFydCwgX3lpZWxkJF90aGlzJCRodHRwJGdlLCByZXMsIHJlc3VsdDsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAvLyAzLiDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LCiAgICAgICAgICAgICAgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGh0dHAuZ2V0KCdyZXBvcnRzL3R5cGUvMScpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF95aWVsZCRfdGhpcyQkaHR0cCRnZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcmVzID0gX3lpZWxkJF90aGlzJCRodHRwJGdlLmRhdGE7CgogICAgICAgICAgICAgIGlmICghKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF90aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bmipjnur/lm77mlbDmja7lpLHotKUhJykpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIC8vIDQuIOaMh+WumuWbvuihqOeahOmFjee9rumhueWSjOaVsOaNrgogICAgICAgICAgICAgIHJlc3VsdCA9IF8ubWVyZ2UocmVzLmRhdGEsIF90aGlzLm9wdGlvbnMpOyAvLyA1LiDkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIIKCiAgICAgICAgICAgICAgbXlDaGFydC5zZXRPcHRpb24ocmVzdWx0KTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACAA,gBADA;AAEAC,MAFA,kBAEA;AACA;AACA;AACAC;AACAC;AACAC;AADA,SADA;AAIAC;AACAC,yBADA;AAEAC;AACAC,yBADA;AAEAC;AACAC;AADA;AAFA;AAFA,SAJA;AAaAC;AACAC,oBADA;AAEAC,qBAFA;AAGAC,sBAHA;AAIAC;AAJA,SAbA;AAmBAC,gBACA;AACAC;AADA,SADA,CAnBA;AAwBAC,gBACA;AACAV;AADA,SADA;AAxBA;AAFA;AAiCA,GApCA;AAqCA;AACAW,SAtCA,qBAsCA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACAC,qBAFA,GAEAC,6CAFA;AAAA;AAAA,qBAIA,iCAJA;;AAAA;AAAA;AAIAC,iBAJA,yBAIArB,IAJA;;AAAA,oBAKAqB,uBALA;AAAA;AAAA;AAAA;;AAAA,+CAMA,kCANA;;AAAA;AAQA;AACAC,oBATA,GASAC,gCATA,EAUA;;AACAJ;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAlDA","names":["name","data","options","title","text","tooltip","trigger","axisPointer","type","label","backgroundColor","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","mounted","myChart","echarts","res","result","_"],"sourceRoot":"src/components/report","sources":["Report.vue"],"sourcesContent":["<template>\r\n  <div class=\"report\">\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!--  卡片-->\r\n    <el-card>\r\n      <!-- 2. 为ECharts准备一个具备大小（宽高）的Dom -->\r\n      <div id=\"main\" style=\"width: 650px;height:300px;\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 1. 引入 echarts 按需引入\r\nimport * as echarts from 'echarts'\r\nimport _ from 'lodash'\r\nexport default {\r\n  name: 'Report',\r\n  data() {\r\n    return {\r\n      // 需要合并的数据\r\n      options: {\r\n        title: {\r\n          text: '用户来源'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#E9EEF3'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            boundaryGap: false\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  // 此时,页面上的元素,已经被渲染完毕了\r\n  async mounted() {\r\n    // 3. 基于准备好的dom，初始化echarts实例\r\n    var myChart = echarts.init(document.getElementById('main'))\r\n\r\n    const { data: res } = await this.$http.get('reports/type/1')\r\n    if (res.meta.status !== 200) {\r\n      return this.$message.error('获取折线图数据失败!')\r\n    }\r\n    // 4. 指定图表的配置项和数据\r\n    const result = _.merge(res.data, this.options)\r\n    // 5. 使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(result)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}