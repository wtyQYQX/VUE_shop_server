{"remainingRequest":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\a1013\\Desktop\\vue_shop\\src\\components\\goods\\Params.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\src\\components\\goods\\Params.vue","mtime":1645699069944},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\babel.config.js","mtime":1645717503330},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644915264891},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1644915264890},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1644915265685},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644915264891},{"path":"C:\\Users\\a1013\\Desktop\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1644915265855}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","data","cb","cataList","cateProps","value","label","children","selectdCateKeys","activeName","manyTableData","onlyTableData","addDialogVisible","addForm","editDialogVisible","editForm","addFormRules","username","required","message","trigger","validator","password","email","mobile","editFormRules","created","methods","getCateList","res","handleChange","handleTabClick","getParamsData","params","sel","item","addDialogClosed","addParams","valid","attr_name","attr_sel","showEditDialog","id","editDialogClosed","editParams","removeParams","confirmButtonText","cancelButtonText","type","catch","confirmResult","handleInputConfirm","row","handleClosed","index","saveAttrVals","attr_vals","showInput","computed","isBtnDisabled","cateId","titleText"],"sourceRoot":"src/components/goods","sources":["Params.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 头部警告区域 -->\r\n      <el-alert title=\"注意: 只允许为第三级分类设置相关参数!\" :closable=\"false\" type=\"warning\" show-icon> </el-alert>\r\n      <el-row class=\"cat_opt\">\r\n        <span>选择商品分类: </span>\r\n        <!-- 级联选择框 -->\r\n        <el-cascader v-model=\"selectdCateKeys\" :options=\"cataList\" :props=\"{ expandTrigger: 'hover', ...cateProps }\" @change=\"handleChange\"></el-cascader>\r\n      </el-row>\r\n      <!-- tab 页签区 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <!-- 添加动态参数的面板 -->\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\" size=\"mini\" :disabled=\"isBtnDisabled\">添加参数</el-button>\r\n          <!-- 动态参数表格 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n              <template v-slot=\"scope\">\r\n                <!-- 循环渲染Tag标签 -->\r\n                <el-tag closable v-for=\"(item, index) in scope.row.attr_vals\" :key=\"index\" @close=\"handleClosed(index, scope.row)\"> {{ item }}</el-tag>\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column type=\"index\" label=\"#\"> </el-table-column>\r\n            <el-table-column label=\"参数名称\" prop=\"attr_name\"> </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template v-slot=\"scope\">\r\n                <el-button type=\"primary\" @click=\"showEditDialog(scope.row.attr_id)\" icon=\"el-icon-edit\" size=\"mini\">编辑</el-button>\r\n                <el-button type=\"danger\" @click=\"removeParams(scope.row.attr_id)\" icon=\"el-icon-delete\" size=\"mini\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <!-- 添加静态属性的面板 -->\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\" size=\"mini\" :disabled=\"isBtnDisabled\">添加属性</el-button>\r\n          <!-- 静态参数表格 -->\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n              <template v-slot=\"scope\">\r\n                <!-- 循环渲染Tag标签 -->\r\n                <el-tag closable v-for=\"(item, index) in scope.row.attr_vals\" :key=\"index\" @close=\"handleClosed(index, scope.row)\"> {{ item }}</el-tag>\r\n                <!-- 输入的文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column type=\"index\" label=\"#\"> </el-table-column>\r\n            <el-table-column label=\"属性名称\" prop=\"attr_name\"> </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template v-slot=\"scope\">\r\n                <el-button type=\"primary\" @click=\"showEditDialog(scope.row.attr_id)\" icon=\"el-icon-edit\" size=\"mini\">编辑</el-button>\r\n                <el-button type=\"danger\" @click=\"removeParams(scope.row.attr_id)\" icon=\"el-icon-delete\" size=\"mini\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog :title=\"'添加' + titleText\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改参数对话框 -->\r\n    <el-dialog :title=\"'修改' + titleText\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'Params',\r\n  data() {\r\n    //验证用户名规则\r\n    var checkusername = (rule, value, cb) => {\r\n      const usernameReg = /^[a-zA-Z0-9]{3,10}$/;\r\n      if (usernameReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的用户名(可以包含字母，数字),在3~10个字符之间\"));\r\n    };\r\n    //验证密码规则\r\n    var checkpassword = (rule, value, cb) => {\r\n      const passwordReg = /^[a-zA-Z0-9]{6,15}$/;\r\n      if (passwordReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的密码(可以包含字母，数字),在6~15个字符之间\"));\r\n    };\r\n    //验证邮箱规则\r\n    var checkEmail = (rule, value, cb) => {\r\n      const emailReg = /^\\w+@[a-zA-Z0-9]+((\\.[a-z0-9A-Z]{1,})+)$/;\r\n      if (emailReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的邮箱\"));\r\n    };\r\n\r\n    //验证手机号规则\r\n    var checkmobile = (rule, value, cb) => {\r\n      const phoneReg =\r\n        /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n      if (phoneReg.test(value)) return cb();\r\n      cb(new Error(\"请输入合法的手机号\"));\r\n    };\r\n    return {\r\n      cataList: [],\r\n      // 级联选择框的配置对象\r\n      cateProps: {\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children'\r\n      },\r\n      // 级联选择框双向绑定的数组\r\n      selectdCateKeys: [],\r\n      // 被激活的页签的名称\r\n      activeName: 'many',\r\n      // 动态参数数据\r\n      manyTableData: [],\r\n      // 静态属性数据\r\n      onlyTableData: [],\r\n      // 控制添加对话框的显示和隐藏\r\n      addDialogVisible: false,\r\n      // 添加参数的表单数据对象\r\n      addForm: {},\r\n      // 控制修改对话框的显示和隐藏\r\n      editDialogVisible: false,\r\n      // 修改的表单对象\r\n      editForm: {},\r\n      //添加表单的验证规则对象\r\n      addFormRules: {\r\n        username: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n          { validator: checkusername, trigger: \"blur\" },\r\n        ],\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          { validator: checkpassword, trigger: \"blur\" },\r\n        ],\r\n        email: [\r\n          { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\r\n          { validator: checkEmail, trigger: \"blur\" },\r\n        ],\r\n        mobile: [\r\n          { required: true, message: \"请输入手机号\", trigger: \"blur\" },\r\n          { validator: checkmobile, trigger: \"blur\" },\r\n        ],\r\n      },\r\n      // 修改用户数据验证规则\r\n      editFormRules: {\r\n        email: [\r\n          { required: true, message: '请输入用户邮箱', trigger: 'blur' },\r\n          { validator: checkEmail, trigger: 'blur' }\r\n        ],\r\n        mobile: [\r\n          { required: true, message: '请输入用户手机', trigger: 'blur' },\r\n          { validator: checkmobile, trigger: 'blur' }\r\n        ]\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    // 获取所有商品分类的数据\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('categories')\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取商品分类失败!')\r\n      }\r\n      this.cataList = res.data\r\n    //   console.log(this.cataList)\r\n    },\r\n    // 级联选择框选中项变化,会触发\r\n    handleChange() {\r\n      this.getParamsData()\r\n    },\r\n    // tab 页签点击事件的处理函数\r\n    handleTabClick() {\r\n    //   console.log(this.activeName)\r\n      this.getParamsData()\r\n    },\r\n    // 获取参数的列表数据\r\n    async getParamsData() {\r\n      // 证明选中的不是三级分类\r\n      if (this.selectdCateKeys.length !== 3) {\r\n        this.selectdCateKeys = []\r\n        this.manyTableData = []\r\n        this.onlyTableData = []\r\n        return\r\n      }\r\n      // 证明选中的是三级分类\r\n      // console.log(this.selectdCateKeys)\r\n      // 根据所选的分类的ID,和当前所处的面板,获取对应的参数\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes`, {\r\n        params: { sel: this.activeName }\r\n      })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取参数列表失败!')\r\n      }\r\n      // 获取Tag的数据分割为数组\r\n      res.data.forEach(item => {\r\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\r\n        // 控制文本框的显示和隐藏\r\n        item.inputVisible = false\r\n        item.inputValue = ''\r\n      })\r\n      if (this.activeName === 'many') {\r\n        this.manyTableData = res.data\r\n      } else {\r\n        this.onlyTableData = res.data\r\n      }\r\n    //   console.log(res.data)\r\n    },\r\n    // 监听对话框的关闭事件\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    addParams() {\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        const { data: res } = await this.$http.post(`categories/${this.cateId}/attributes`, {\r\n          attr_name: this.addForm.attr_name,\r\n          attr_sel: this.activeName\r\n        })\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('添加分类失败!')\r\n        }\r\n        this.getParamsData()\r\n        // console.log(res)\r\n        this.addDialogVisible = false\r\n      })\r\n    },\r\n    // 点击按钮展示修改的对话框\r\n    async showEditDialog(id) {\r\n      const { data: res } = await this.$http.get(`categories/${this.cateId}/attributes/${id}`, {\r\n        params: { attr_sel: this.activeName }\r\n      })\r\n      console.log(res)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取参数信息失败!')\r\n      }\r\n      this.editForm = res.data\r\n      this.editDialogVisible = true\r\n    },\r\n    // 重置修改的表单\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 点击按钮修改数据信息\r\n    editParams() {\r\n      this.$refs.editFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        const { data: res } = await this.$http.put(`categories/${this.cateId}/attributes/${this.editForm.attr_id}`, {\r\n          attr_name: this.editForm.attr_name,\r\n          attr_sel: this.activeName\r\n        })\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('修改参数失败!')\r\n        }\r\n        // console.log(res)\r\n        this.$message.success('修改参数成功!')\r\n        this.getParamsData()\r\n        this.editDialogVisible = false\r\n      })\r\n    },\r\n\r\n    async removeParams(id) {\r\n      const confirmResult = await this.$confirm('此操作将永久删除该分类, 是否继续?', '删除', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除操作!')\r\n      }\r\n      const { data: res } = await this.$http.delete(`categories/${this.cateId}/attributes/${id}`)\r\n      console.log(res)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('删除参数失败!')\r\n      }\r\n      this.$message.success('删除参数成功')\r\n      this.getParamsData()\r\n    },\r\n    // 文本框失去焦点和回车触发\r\n    handleInputConfirm(row) {\r\n      console.log('ok')\r\n      if (row.inputValue.trim().length === 0) {\r\n        row.inputValue = ''\r\n        row.inputVisible = false\r\n        return\r\n      }\r\n      // 如果没有return证明内容合法做后续处理\r\n      row.attr_vals.push(row.inputValue.trim())\r\n      row.inputValue = ''\r\n      row.inputVisible = false\r\n      // 需要发送请求,保存\r\n      this.saveAttrVals(row)\r\n    },\r\n    // Tag标签的删除\r\n    handleClosed(index, row) {\r\n      row.attr_vals.splice(index, 1)\r\n      this.saveAttrVals(row)\r\n    },\r\n    async saveAttrVals(row) {\r\n      const { data: res } = await this.$http.put(`categories/${this.cateId}/attributes/${row.attr_id}`, {\r\n        attr_sel: this.activeName,\r\n        attr_name: row.attr_name,\r\n        attr_vals: row.attr_vals.join(' ')\r\n      })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('修改参数项失败!')\r\n      }\r\n      this.$message.success('修改参数项成功!')\r\n    },\r\n    // 点击按钮显示文本输入框\r\n    showInput(row) {\r\n      row.inputVisible = true\r\n      // 自动获取焦点\r\n      // $nextTick 方法作用: 当页面上的元素被重新渲染之后,才会指定回调函数中的代码\r\n      this.$nextTick(_ => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用.则返回true,否则返回fasle\r\n    isBtnDisabled() {\r\n      if (this.selectdCateKeys.length !== 3) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    cateId() {\r\n      if (this.selectdCateKeys.length === 3) {\r\n        return this.selectdCateKeys[2]\r\n      }\r\n      return null\r\n    },\r\n    titleText() {\r\n      if (this.activeName === 'many') {\r\n        return '动态参数'\r\n      } else {\r\n        return '静态参数'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n.el-tag {\r\n  margin: 5px 10px;\r\n}\r\n\r\n.button-new-tag {\r\n  margin: 5px 10px;\r\n  height: 32px;\r\n  line-height: 30px;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n}\r\n.input-new-tag {\r\n  width: 90px;\r\n  margin: 5px 10px;\r\n  vertical-align: bottom;\r\n}\r\n</style>"]}]}